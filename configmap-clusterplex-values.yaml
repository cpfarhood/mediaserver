apiVersion: v1
kind: ConfigMap
metadata:
  name: clusterplex-values
data:
  values.yaml: |
    global:
      plexImage:
        repository: linuxserver/plex
        tag: latest
        imagePullPolicy: Always
      timezone: America/Detroit
      PGID: 911
      PUID: 911
      sharedStorage:
        transcode:
          enabled: true
          storageClass: "ceph-filesystem"
          size: 128Gi
          retain: false
        media:
          enabled: true
          storageClass: "ceph-filesystem"
          size: 32Gi
          retain: true
        additionalMediaVolumes:
          cache:
            enabled: true
            existingClaim: clusterplex-cache-pvc
            mountPath: /config/Library/Application Support/Plex Media Server/Cache
          drivers:
            enabled: true
            existingClaim: clusterplex-drivers-pvc
            mountPath: /config/Library/Application Support/Plex Media Server/Drivers
          shows:
            enabled: true
            existingClaim: "shows"
          movies:
            enabled: true
            existingClaim: "movies"

    pms:
      enabled: true
      env: {}
      config:
        transcoderVerbose: 0
        transcodeOperatingMode: remote
        plexClaimToken:
        version: docker
        port: 32400
        localRelayEnabled: true
        relayPort: 32499
        pmsIP: ""
      serviceConfig:
        type: LoadBalancer
        externalTrafficPolicy: Local
        annotations:
          lbipam.cilium.io/ips: "65.43.40.103"
        labels:
          zone: public
      ingressConfig:
        enabled: false
      configVolume:
        enabled: true
        storageClass: "ceph-block"
        accessMode: ReadWriteOnce
        size: 32Gi
        retain: true
      healthProbes:
        startup: true
        readiness: true
        liveness: true
      resources:
        requests:
          cpu: 2000m
          memory: 4Gi
        limits:
          cpu: 4000m
          memory: 8Gi
          gpu.intel.com/i915: 1
          
    orchestrator:
      enabled: true
      image:
        repository: ghcr.io/pabloromeo/clusterplex_orchestrator
        pullPolicy: IfNotPresent
      env: {}
      config:
        port: 3500
        workerSelectionStrategy: LOAD_RANK
      serviceConfig:
        type: ClusterIP
        annotations: {}
        labels: {}
      prometheusServiceMonitor:
        enabled: false
      enableGrafanaDashboard: false
      healthProbes:
        startup: true
        readiness: true
        liveness: true
      resources:
        requests:
          cpu: 200m
          memory: 64Mi
        limits:
          cpu: 500m
          memory: 128Mi

    worker:
      enabled: true
      env:
        FFMPEG_HWACCEL: vaapi
      securityContext:
        privileged: true
      config:
        replicas: 3
        port: 3501
        cpuStatInterval: 1000
        eaeSupport: 1
      serviceConfig:
        type: ClusterIP
        annotations: {}
        labels: {}
      codecVolumes:
        enabled: true
        labels: {}
        annotations: {}
        accessMode: ReadWriteOnce
        size: 1Gi
      healthProbes:
        startup: true
        readiness: true
        liveness: true
      resources:
        requests:
          cpu: 2000m
          memory: 4Gi
        limits:
          cpu: 4000m
          memory: 8Gi
          gpu.intel.com/i915: 1
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  name: clusterplex-worker
              topologyKey: kubernetes.io/hostname
            weight: 100
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  name: clusterplex-pms
              topologyKey: kubernetes.io/hostname
            weight: 50
