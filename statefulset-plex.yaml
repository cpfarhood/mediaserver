apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: plex
  namespace: mediaserver
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: plex
  serviceName: "plex"
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: plex
    spec:
      containers:
      - name: plex
        image: docker.io/plexinc/pms-docker:plexpass
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 32400
          name: http-32400
        env:
        - name: TZ
          value: America/Detroit
        - name: VERSION
          value: docker
        - name: PLEX_UID
          value: "911"
        - name: PLEX_GID
          value: "911"
        - name: PLEX_CLAIM
          value: claim-dt1-G8Tzv4KDVNPW1Vjy
        volumeMounts:
        - name: config
          mountPath: "/config"
        - name: backups
          mountPath: "/backups"
        - name: transcode
          mountPath: "/transcode"
        - name: music0
          mountPath: "/media/music0"
        - name: movies
          mountPath: "/media/movies"
        - name: movies0
          mountPath: "/media/movies0"
        - name: movies1
          mountPath: "/media/movies1"
        - name: shows
          mountPath: "/media/shows"
        - name: shows0
          mountPath: "/media/shows0"
        - name: temp-movies
          mountPath: "/media/temp-movies"
        - name: temp-shows
          mountPath: "/media/temp-shows"
        resources:
          requests:
            memory: "4Gi"
            cpu: "2000m"
          limits:
            memory: "8Gi"
            gpu.intel.com/i915: 12
        readinessProbe:                # Check that the http server is responding to ensure the container is up
          tcpSocket:
            port: 32400
        livelinessProbe:               # Check that the http server is responding to ensure the container is up
          tcpSocket:
            port: 32400
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 5
      volumes:
      - name: transcode
        emptyDir: 
          sizeLimit: 128Gi
      - name: backups
        persistentVolumeClaim:
          claimName: backups
      - name: music0
        persistentVolumeClaim:
          claimName: music0
      - name: movies
        persistentVolumeClaim:
          claimName: movies
      - name: movies0
        persistentVolumeClaim:
          claimName: movies0
      - name: movies1
        persistentVolumeClaim:
          claimName: movies1
      - name: shows
        persistentVolumeClaim:
          claimName: shows
      - name: shows0
        persistentVolumeClaim:
          claimName: shows0
      - name: temp-movies
        persistentVolumeClaim:
          claimName: temp-movies
      - name: temp-shows
        persistentVolumeClaim:
          claimName: temp-shows
      nodeSelector:
        farh.net/gpu: "true"
  volumeClaimTemplates:
  - metadata:
      name: config
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 32Gi
  - metadata:
      name: transcode
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 128Gi