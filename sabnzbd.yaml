## Ingress
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sabnzbd
  namespace: mediaserver
spec:
  ingressClassName: traefik-internal
  rules:
  - host: sabnzbd.mediaserver.k8s
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name:  sabnzbd
            port:
              number: 8080


## Service
---
apiVersion: v1
kind: Service
metadata:
   name: sabnzbd
   namespace: mediaserver
   labels:
     app: sabnzbd
spec:
  clusterIP: None
  ports:
  - port: 8080
  selector:
    app: sabnzbd


## StatefulSet
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sabnzbd
  namespace: mediaserver
spec:
  selector:
    matchLabels:
      app: sabnzbd
  serviceName: "sabnzbd"
  replicas: 1
  minReadySeconds: 10
  template:
    metadata:
      labels:
        app: sabnzbd
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: sabnzbd
        image: lscr.io/linuxserver/sabnzbd:latest
        ports:
        - containerPort: 8080
          name: http-8080
        volumeMounts:
        - name: sabnzbd-config
          mountPath: "/config"
        - name: downloads
          mountPath: "/downloads"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
      volumes:
      - name: sabnzbd-config
        persistentVolumeClaim:
          claimName: sabnzbd-config
      - name: downloads
        nfs:
          path: /mnt/pool0/downloads
          server: spielberg.farhoodliquor.dmz


## Volumes
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sabnzbd-config
  labels:
    name: sabnzbd-config
  namespace: mediaserver
  annotations:
    kustomize.toolkit.fluxcd.io/prune: disabled
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 8Gi