## Service
---
apiVersion: v1
kind: Service
metadata:
   name: tinymediamanager
   namespace: mediaserver
   labels:
     app: tinymediamanager
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  ports:
  - port: 80
    targetPort: 4000
  selector:
    app: tinymediamanager


## StatefulSet
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tinymediamanager
  namespace: mediaserver
spec:
  selector:
    matchLabels:
      app: tinymediamanager
  serviceName: "tinymediamanager"
  template:
    metadata:
      labels:
        app: tinymediamanager
    spec:
      containers:
      - name: tinymediamanager
        image: tinymediamanager/tinymediamanager:latest
        ports:
        - name: http-4000
          containerPort: 4000
        volumeMounts:
        - name: data
          mountPath: "/data"
        - name: local
          mountPath: "/media/local/"
        - name: remote
          mountPath: "/media/remote/"
        env:
        - name: "USER_ID"
          value: "911"
        - name: "GROUP_ID"
          value: "911"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        readinessProbe:                # Check that the http server is responding to ensure the container is up
          httpGet:
            path: /
            port: http-4000
        livenessProbe:                 # Check that the chose torrent is available to ensure the container is serving data
          httpGet:
            path: /
            port: http-4000
          failureThreshold: 6
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: tinymediamanager-data
      - name: local
        persistentVolumeClaim:
          claimName: mediaserver-local
      - name: remote
        persistentVolumeClaim:
          claimName: mediaserver-remote