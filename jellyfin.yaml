## Ingress
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jellyfin-ingress
  namespace: mediaserver
spec:
  rules:
  - host: streaming.farhoodliquor.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name:  jellyfin
            port:
              number: 8096
  tls:
  - hosts:
    - streaming.farhoodliquor.com
    secretName: farhoodliquor-com-cert-letsencrypt-prod


## Service
---
apiVersion: v1
kind: Service
metadata:
  name: jellyfin
  namespace: mediaserver
  labels:
    app: jellyfin
spec:
  ports:
  - name: http-8096
    port: 8096
    targetPort: 8096
  selector:
    app: jellyfin
  type: LoadBalancer
  externalTrafficPolicy: Local
  #clusterIP: None


## StatefulSet
--- 
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jellyfin
  namespace: mediaserver
spec:
  selector:
    matchLabels:
      app: jellyfin
  serviceName: "jellyfin"
  replicas: 1
  minReadySeconds: 10
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      containers:
      - name: jellyfin
        #image: docker.io/bitwrk/jellyfin-rffmpeg:latest  # for distrubed transcoding
        image: docker.io/jellyfin/jellyfin:latest  # official upstream
        ports:
        - containerPort: 8096
          name: http-8096
        env:
        - name: TZ
          value: America/Detroit
        - name: JELLYFIN_DATA_DIR
          value: /config/data 
        - name: JELLYFIN_CONFIG_DIR
          value: /config 
        - name: JELLYFIN_LOG_DIR
          value: /config/log 
        - name: JELLYFIN_CACHE_DIR
          value: /config/cache
        volumeMounts:
        - name: jellyfin-config
          mountPath: "/config"
        - name: jellyfin-content
          mountPath: "/media"
        resources:
          requests:
            memory: "2Gi"
            cpu: "2000m"
          limits:
            gpu.intel.com/i915: 1
      volumes:
      - name: jellyfin-config
        persistentVolumeClaim:
          claimName: jellyfin-config
      nodeSelector:
        hevc10: "true"
  volumeClaimTemplates:
  - metadata:
      name: jellyfin-content
    spec:
      volumeName: jellyfin-content
      accessModes: ["ReadWriteMany"]
      storageClassName: "nfs"
      resources:
        requests:
          storage: 1Gi


## Volumes
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-config
  namespace: mediaserver
  labels:
    name: jellyfin-config
  annotations:
    kustomize.toolkit.fluxcd.io/prune: disabled
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 8Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-transcode
  namespace: mediaserver
  labels:
    name: jellyfin-transcode
  annotations:
    kustomize.toolkit.fluxcd.io/prune: enabled
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 128Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jellyfin-content
  labels:
    name: jellyfin-content
  annotations:
    kustomize.toolkit.fluxcd.io/prune: disabled
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: nfs
  mountOptions:
  - soft
  - nfsvers=4.1
  - rsize=32768
  - wsize=32768
  nfs:
    path: /mnt/pool0/media/
    server: spielberg.farhoodliquor.dmz