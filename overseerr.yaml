## Ingress
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: overseerr
  namespace: mediaserver
  annotations:
    traefik.ingress.kubernetes.io/router.middlewares: traefik-redirect@kubernetescrd
spec:
  ingressClassName: traefik-external
  rules:
  - host: requests.farhoodliquor.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name:  overseerr
            port:
              number: 5055
  tls:
  - hosts:
    - requests.farhoodliquor.com
    secretName: farhoodliquor-com-cert-letsencrypt-prod


## Service
---
apiVersion: v1
kind: Service
metadata:
   name: overseerr
   namespace: mediaserver
   labels:
     app: overseerr
spec:
  clusterIP: None
  ports:
  - port: 5055
  selector:
    app: overseerr


## StatefulSet
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: overseerr
  namespace: mediaserver
spec:
  selector:
    matchLabels:
      app: overseerr
  serviceName: "overseerr"
  replicas: 1
  template:
    metadata:
      labels:
        app: overseerr
    spec:
      containers:
      - name: overseer
        image: docker.io/sctx/overseerr:latest
        ports:
        - containerPort: 5055
          name: http-5055
        volumeMounts:
        - name: overseerr-config
          mountPath: "/app/config"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
      volumes:
      - name: overseerr-config
        persistentVolumeClaim:
          claimName: overseerr-config


## Volumes
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: overseerr-config
  namespace: mediaserver
  labels:
    name: overseerr-config
    kustomize.toolkit.fluxcd.io/prune: disabled
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: longhorn-perpetual
  resources:
    requests:
      storage: 8Gi
