apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: tinymediamanager
  labels:
    app.kubernetes.io/name: tinymediamanager
  annotations:
    polaris.fairwinds.com/tagNotSpecified-exempt: true  
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: tinymediamanager
  serviceName: "tinymediamanager"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tinymediamanager
    spec:
      containers:
      - name: tinymediamanager
        image: tinymediamanager/tinymediamanager:latest
        ports:
        - name: http-4000
          containerPort: 4000
        volumeMounts:
        - name: data
          mountPath: "/data"
        - name: local
          mountPath: "/media/local/"
        - name: remote
          mountPath: "/media/remote/"
        env:
        - name: "USER_ID"
          value: "911"
        - name: "GROUP_ID"
          value: "911"
        resources:
          requests:
            memory: "2Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        readinessProbe:                # Check that the http server is responding to ensure the container is up
          httpGet:
            path: /
            port: http-4000
        livenessProbe:                 # Check that the chose torrent is available to ensure the container is serving data
          httpGet:
            path: /
            port: http-4000
          failureThreshold: 6
        securityContext:
          runAsRoot: false
          allowPrivilegeEscalation: false
      volumes:
      - name: local
        nfs:
          path: /mnt/pool0/media
          server: truenas.farhoodliquor.dmz
      - name: remote
        persistentVolumeClaim:
          claimName: mediaserver-remote
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 4Gi