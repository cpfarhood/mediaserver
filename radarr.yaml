## Ingress
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: radarr
  namespace: mediaserver
spec:
  ingressClassName: traefik-internal
  rules:
  - host: radarr.mediaserver.k8s
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name:  radarr
            port:
              number: 7878
              
              
## Service
---
apiVersion: v1
kind: Service
metadata:
   name: radarr
   namespace: mediaserver
   labels:
     app: radarr
spec:
  clusterIP: None
  ports:
  - port: 7878
  selector:
    app: radarr


## StatefulsSet
--- 
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: radarr
  namespace: mediaserver
spec:
  selector:
    matchLabels:
      app: radarr
  serviceName: "radarr"
  replicas: 1
  template:
    metadata:
      labels:
        app: radarr
    spec:
      containers:
      - name: radarr
        image: lscr.io/linuxserver/radarr:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 7878
          name: http-7878
        volumeMounts:
        - name: radarr-config
          mountPath: "/config"
        - name: downloads
          mountPath: "/downloads/complete"
        - name: media
          mountPath: "/media"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
      volumes:
      - name: radarr-config
        persistentVolumeClaim:
          claimName: radarr-config
      - name: downloads
        nfs:
          path: /mnt/pool0/downloads
          server: spielberg.farhoodliquor.dmz
      - name: media
        nfs:
          path: /mnt/pool0/media
          server: spielberg.farhoodliquor.dmz


## Volumes
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: radarr-config
  namespace: mediaserver
  labels:
    name: radarr-config
    kustomize.toolkit.fluxcd.io/prune: disabled
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: longhorn-perpetual
  resources:
    requests:
      storage: 8Gi