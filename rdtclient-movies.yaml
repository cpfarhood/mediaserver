## Ingress
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rdtclient-movies
  namespace: mediaserver
spec:
  ingressClassName: traefik-internal
  rules:
  - host: rdtclient-movies.mediaserver.k8s
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name:  rdtclient-movies
            port:
              number: 6500
              
              
## Service
---
apiVersion: v1
kind: Service
metadata:
   name: rdtclient-movies
   namespace: mediaserver
   labels:
     app: rdtclient-movies
spec:
  type: ClusterIP
  #clusterIP: None
  ports:
  - port: 6500
  selector:
    app: rdtclient-movies


## StatefulSet
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rdtclient-movies
  namespace: mediaserver
spec:
  selector:
    matchLabels:
      app: rdtclient-movies
  serviceName: "rdtclient-movies"
  replicas: 1
  template:
    metadata:
      labels:
        app: rdtclient-movies
    spec:
      containers:
      - name: rdtclient-movies
        image: rogerfar/rdtclient:latest
        ports:
        - containerPort: 6500
          name: http-6500
        volumeMounts:
        - name: rdtclient-db
          mountPath: "/data/db"
        - name: movies
          mountPath: "/media/movies"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
      volumes:
      - name: rdtclient-db
        persistentVolumeClaim:
          claimName: rdtclient-movies-db
      - name: movies
        nfs:
          path: /mnt/pool1/media/movies
          server: spielberg.farhoodliquor.dmz



## Volumes
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rdtclient-movies-db
  namespace: mediaserver
  labels:
    name: rdtclient-movies-db
    kustomize.toolkit.fluxcd.io/prune: disabled
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: longhorn-perpetual
  resources:
    requests:
      storage: 8Gi
