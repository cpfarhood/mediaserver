apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: radarr
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: radarr
  serviceName: "radarr"
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: radarr
    spec:
      containers:
      - name: radarr
        image: lscr.io/linuxserver/radarr:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 7878
          name: http-radarr
        volumeMounts:
        - name: config
          mountPath: "/config"
        - name: backups
          mountPath: "/backups"
        - name: movies
          mountPath: /media/movies
        - name: movies0
          mountPath: /media/movies0
        - name: movies-gp
          mountPath: /media/movies-gp
        - name: downloads-complete
          mountPath: "/downloads/complete"
        resources:
          requests:
            memory: "4Gi"
            cpu: "100m"
          limits:
            memory: "8Gi"
        livenessProbe:
          httpGet:
            path: /ping
            port: http-radarr
        readinessProbe:
          httpGet:
            path: /ping
            port: http-radarr
      volumes:
      - name: backups
        persistentVolumeClaim:
          claimName: backups
      - name: downloads-complete
        persistentVolumeClaim:
          claimName: downloads
      - name: movies
        persistentVolumeClaim:
          claimName: movies
      - name: movies0
        persistentVolumeClaim:
          claimName: movies0
        - name: movies-gp
          mountPath: /media/movies-gp
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - sonarr
              topologyKey: "kubernetes.io/hostname"
  volumeClaimTemplates:
  - metadata:
      name: config
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 4Gi
